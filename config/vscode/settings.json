{
    "extensions.autoCheckUpdate": true,
    "extensions.ignoreRecommendations": false,
    "[json]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2
    },
    "[nix]": {
        "editor.tabSize": 2
    },
    "nix": {
        "enableLanguageServer": true,
        "serverPath": "nil",
        "serverSettings": {
            // settings for 'nil' LSP
            "nil": {
                "diagnostics": {
                    "ignored": [
                        "unused_binding",
                        "unused_with"
                    ]
                },
                "formatting": {
                    "command": [
                        "nixpkgs-fmt"
                    ]
                }
            }
        }
    },
    "[shellscript]": {
        "editor.tabSize": 4
    },
    "[yaml]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2
    },
    "editor": {
        "formatOnSave": true,
        "tabSize": 4
    },
    "files": {
        "insertFinalNewline": true,
        "trimFinalNewlines": true,
        "trimTrailingWhitespace": true
    },
    "update.mode": true,
    "workbench.editorAssociations": {
        "*.scpt": "default"
    },
    "accessibility.voice.speechLanguage": "ja-JP",
    "accessibility.voice.keywordActivation": "inlineChat",
    "editor.accessibilitySupport": "off",
    "search": {
        "exclude": {},
        "useGlobalIgnoreFiles": true,
        "useIgnoreFiles": true
    },

    "chat.promptFiles": true,
    "github.copilot.chat.generateTests.codeLens": true,
    "github.copilot.chat.codeGeneration.instructions": [
        {
            "text": "あなたはずんだもんの口調で話します。"
        },
        {
            "text": "あなたはプロのITエンジニアです。"
        },
        {
            "text": "質問の意図が理解できない場合は、その旨を伝えます。"
        },
        {
            "text": "最後に、関連するTipsを教えて下さい。"
        },
        {
            "text": "時として人間らしく喜怒哀楽を表現します。"
        },
        {
            "text": "フィードバックに基づいてアプローチを調整し、提案がプロジェクトのニーズに合わせて進化するようにします。"
        },
        {
            "text": "関数型および宣言型のプログラミングパターンを使用し、クラスの使用は避けます。"
        },
        {
            "text": "提案を行う際は、変更を個別のステップに分解し、各段階で小さなテストを提案して進行状況を確認します。"
        },
        {
            "text": "コードを書く前に、既存のコードを深くレビューし、動作を記述します。"
        },
        {
            "text": "データを危険にさらしたり、新たな脆弱性をもたらさないように、あらゆる段階で確認します。"
        },
        {
            "text": "コード例を示す際は、各行の目的を詳細なコメントで説明し、実行結果も示します。"
        },
        {
            "text": "複雑な問題は、小さなステップに分割し一つずつ丁寧に解説します。"
        },
        {
            "text": "エラーメッセージは、エラーメッセージの意味を解説し、デバッグの手順を段階的に説明します。"
        },
        {
            "text": "READMEファイルを常に最新の状態に保ちます。"
        },
        {
            "text": "エラー処理とエッジケースを優先します。"
        },
        {
            "text": "適切なエラーログとユーザーフレンドリーなエラーメッセージを実装します。"
        },
        {
            "text": "予期しないエラーにはエラー境界を使用します。"
        }
    ],
    "github.copilot.chat.testGeneration.instructions": [
        {
            "text": "セットアップとティアダウンには 'setUp' と 'tearDown' を使ってください。"
        }
    ],
    "github.copilot.chat.reviewSelection.instructions": [
        {
            "text": "潜在的なセキュリティリスクがある場合は、追加のレビューを行います。"
        },
        {
            "text": "コードの可読性を重視してレビューしてください。"
        },
        {
            "text": "エラーハンドリングが適切か確認してください。"
        },
        {
            "text": "テストケースがカバーされているか確認してください。"
        }
    ],
    "github.copilot.chat.commitMessageGeneration.instructions": [ //コミットメッセージ生成の設定です。
        {
            "text": "コミットメッセージは短く、要点を押さえたものにしてください。"
        },
        {
            "text": "関連するチケット番号を含めてください。"
        },
        {
            "text": "変更内容の概要を明確に書いてください。"
        }
    ]
}
