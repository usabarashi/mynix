{
  "cleanupPeriodDays": 30,
  "env": {
    "BASH_DEFAULT_TIMEOUT_MS": "300000",
    "BASH_MAX_TIMEOUT_MS": "1200000",
    "DISABLE_AUTOUPDATER": "1"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(gemini:*)",
      "Bash(gh browse:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue status:*)",
      "Bash(gh issue view:*)",
      "Bash(gh org:*)",
      "Bash(gh pr checkout:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr view:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo view:*)",
      "Bash(gh cache list:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh workflow view:*)",
      "Bash(gh ruleset:*)",
      "Bash(gh search:*)",
      "Bash(gh status:*)",
      "Bash(gh variable get:*)",
      "Bash(gh variable list:*)",
      "Bash(git add:*)",
      "Bash(git apply:*)",
      "Bash(git bisect:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git fetch:*)",
      "Bash(git diff:*)",
      "Bash(git difftool:*)",
      "Bash(git grep:*)",
      "Bash(git log:*)",
      "Bash(git merge:*)",
      "Bash(git mergetool:*)",
      "Bash(git mv:*)",
      "Bash(git pull:*)",
      "Bash(git range-diff:*)",
      "Bash(git rebase:*)",
      "Bash(git shortlog:*)",
      "Bash(git show:*)",
      "Bash(git status:*)",
      "Bash(git submodule:*)",
      "mcp__voicevox__text_to_speech",
      "mcp__voicevox__list_voice_styles",
      "WebFetch(domain:github.com)"
    ],
    "deny": [
      "Bash(gh auth:*)",
      "Bash(gh codespace:*)",
      "Bash(gh gist:*)",
      "Bash(gh issue create:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue close:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh issue delete:*)",
      "Bash(gh issue develop:*)",
      "Bash(gh issue edit:*)",
      "Bash(gh issue lock:*)",
      "Bash(gh issue pin:*)",
      "Bash(gh issue reopen:*)",
      "Bash(gh issue transfer:*)",
      "Bash(gh issue unlock:*)",
      "Bash(gh issue unpin:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr close:*)",
      "Bash(gh pr comment:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr lock:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr ready:*)",
      "Bash(gh pr reopen:*)",
      "Bash(gh pr review:*)",
      "Bash(gh pr unlock:*)",
      "Bash(gh pr update-branch:*)",
      "Bash(gh project:*)",
      "Bash(gh release:*)",
      "Bash(gh repo create:*)",
      "Bash(gh repo archive:*)",
      "Bash(gh repo autolink:*)",
      "Bash(gh repo clone:*)",
      "Bash(gh repo delete:*)",
      "Bash(gh repo deploy-key:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh repo fork:*)",
      "Bash(gh repo gitignore:*)",
      "Bash(gh repo license:*)",
      "Bash(gh repo rename:*)",
      "Bash(gh repo set-default:*)",
      "Bash(gh repo sync:*)",
      "Bash(gh repo unarchive:*)",
      "Bash(gh cache delete:*)",
      "Bash(gh run cancel:*)",
      "Bash(gh run delete:*)",
      "Bash(gh run download:*)",
      "Bash(gh run rerun:*)",
      "Bash(gh workflow disable:*)",
      "Bash(gh workflow enable:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh agent-task:*)",
      "Bash(gh alias:*)",
      "Bash(gh api:*)",
      "Bash(gh attestation:*)",
      "Bash(gh completion:*)",
      "Bash(gh config:*)",
      "Bash(gh extension:*)",
      "Bash(gh gpg-key:*)",
      "Bash(gh label:*)",
      "Bash(gh preview:*)",
      "Bash(gh secret:*)",
      "Bash(gh ssh-key:*)",
      "Bash(gh variable delete:*)",
      "Bash(gh variable set:*)",
      "Bash(git blame:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git describe:*)",
      "Bash(git notes:*)",
      "Bash(git push:*)",
      "Bash(git remote:*)",
      "Bash(git reset:*)",
      "Bash(git restore:*)",
      "Bash(git revert:*)",
      "Bash(git rm:*)",
      "Bash(git stash:*)",
      "Bash(git switch:*)",
      "Bash(git tag:*)",
      "Bash(git worktree:*)",
      "Bash(rm:*)",
      "Bash(sudo:*)",
      "Read(.env.*)",
      "Read(id_rsa)",
      "Read(id_ed25519)",
      "Read(**/*token*)",
      "Read(**/*key*)",
      "Write(.env*)",
      "Write(**/secrets/**)",
      "Write(~/.ssh/*)",
      "Write(/etc/*)",
      "Edit(~/.ssh/*)",
      "Edit(/etc/*)"
    ]
  },
  "model": "opusplan",
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "bash ~/.claude/scripts/deny-check.sh"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "bash ~/.claude/scripts/notification.sh"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "bash ~/.claude/scripts/stop.sh"
          }
        ]
      }
    ]
  }
}
